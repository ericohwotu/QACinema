# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

GET     /payment                    controllers.PaymentController.initiateClientToken
POST    /payment/make               controllers.PaymentController.makePayment

GET     /movie/$id<[0-9a-z]+>       controllers.Application.movie(id : String)

GET     /certifications             controllers.Application.certifications
GET     /contactus                  controllers.ContactController.contactUs
POST    /contactus                  controllers.ContactController.formHandler
GET     /findus                     controllers.Application.findUs

GET     /listings                   controllers.Application.listings
GET     /listings/$genre<[a-z-]+>       controllers.Application.listingsWithGenre(genre: String)
GET     /search/$title<[%a-zA-Z0-9-]+>    controllers.Application.searchByTitle(title: String)

GET     /about                      controllers.Application.about
GET     /nearby                     controllers.Application.nearby


# bookings page
GET     /bookings                   controllers.ScreeningsController.index(id: String ?= "Sample Booking", multipliers: String ?= "1,2,3")
GET     /bookings/getseats          controllers.ScreeningsApiController.getAllSeats(key: Option[String] ?= None, name: Option[String] ?= None, date: String, time: String)
GET     /key/getkey                 controllers.ScreeningsDbController.getKey
POST    /bookings/bookseat          controllers.ScreeningsApiController.bookSeat(id: Int, key: Option[String] ?= None,name: Option[String] ?= None, date: String, time: String)
GET     /bookings/topayment         controllers.ScreeningsController.toPayment(amount: String)
GET     /bookings/confirm           controllers.ScreeningsController.toSubmitBooking()
GET     /bookings/submit            controllers.ScreeningsApiController.submitBooking(key: Option[String] ?= None,name: Option[String] ?= None, date: String, time: String)

# User management
GET     /register                   controllers.UserController.register
POST    /register                   controllers.UserController.regHandler
GET     /login                      controllers.UserController.login
POST    /login                      controllers.UserController.loginHandler
GET     /dashboard                  controllers.UserController.dashboard
GET     /logout                     controllers.UserController.logout

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#MongoDB
GET     /addMovies                  controllers.Mongo.createMoviesFromAPI()
GET     /addCinemas                 controllers.Mongo.addLocations()

